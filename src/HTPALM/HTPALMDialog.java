
package HTPALM;

import java.awt.geom.Point2D;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import org.micromanager.MMStudioMainFrame;
import org.micromanager.api.MMListenerInterface;
import mmcorej.CMMCore;
import org.micromanager.utils.MMScriptException;
import org.micromanager.utils.ReportingUtils;

/**
 *
 * @author seamus.holden@epfl.ch
 */
public class HTPALMDialog extends javax.swing.JDialog implements MMListenerInterface{

   //TODO: Make current position / current FOV update automatically
   //TODO: Add nFov config parameter
   HTPALM_MMPlugin htpalm =null;
   ConfigurationOptions config_=null;
   InitOptionDialog initOptionDlg_ = null;
   HardwareControl control_ = null;
   MMStudioMainFrame gui_;
   /**
    * Creates new form HTPALMDialog
    */
   public HTPALMDialog(java.awt.Frame parent, boolean modal, ConfigurationOptions config_, HardwareControl control_, HTPALM_MMPlugin htpalm) {
      super(parent, modal);
      initComponents();
      
      this.htpalm = htpalm;
      this.config_ = config_;
      this.control_ = control_;
      gui_ = (MMStudioMainFrame) parent;
      gui_.addMMBackgroundListener(this);// make the background the right colour
      gui_.addMMListener(this);// MM will alert the dialog when it does stuff
      reloadSettings();
   }

   private void reloadSettings(){
      jTextField_StartX.setText(Double.toString(config_.mosaicStartPosX_));
      jTextField_StartY.setText(Double.toString(config_.mosaicStartPosY_));
      setStateLaserControlRadioGroup(config_.laserControlIsAutomatic_);
      jTextField_ExcitationPowerNumber.setText(Double.toString(config_.laserManualExPower_));
      jTextField_ActivationPowerNumber.setText(Double.toString(config_.laserManualActPower_));
      jCheckBox_ExcludeBadFov.setSelected(config_.fovAnalysis_excludeBadFov_);
      //update currentpos x, current pos y
      Point2D.Double posXY;
      try {
         posXY = gui_.getXYStagePosition();
         jLabel_CurrentX.setText(Double.toString(posXY.x));
         jLabel_CurrentY.setText(Double.toString(posXY.y));
      } catch (MMScriptException ex) {
         ReportingUtils.logError(ex, "Unable to get stage position");
      }
   }
   private void updateSettings(){
      config_.mosaicStartPosX_ = Double.parseDouble(jTextField_StartX.getText());
      config_.mosaicStartPosY_ = Double.parseDouble(jTextField_StartY.getText());
      config_.laserControlIsAutomatic_ = getStateLaserControlRadioGroup();
      config_.fovAnalysis_excludeBadFov_ = jCheckBox_ExcludeBadFov.isSelected();
      config_.laserManualActPower_=Double.parseDouble(jTextField_ActivationPowerNumber.getText());
      config_.laserManualExPower_=Double.parseDouble(jTextField_ExcitationPowerNumber.getText());
   
   }
   
   private void setStateLaserControlRadioGroup(boolean laserControlIsAutomatic){
      if (laserControlIsAutomatic){
         jRadioButton_LaserControlManual.setSelected(false);
         jRadioButton_LaserControlAuto.setSelected(true);
      }
      else{
         jRadioButton_LaserControlManual.setSelected(true);
         jRadioButton_LaserControlAuto.setSelected(false);
      }
   }

   private boolean getStateLaserControlRadioGroup(){
      boolean laserControlIsAutomatic;
      if (jRadioButton_LaserControlManual.isSelected()){
         laserControlIsAutomatic = false;
      }
      else if (jRadioButton_LaserControlAuto.isSelected()){
         laserControlIsAutomatic = true;
      }
      else{
         throw new RuntimeException("Unexpected radiobutton state");
      }

      return laserControlIsAutomatic;
      
   }
      
   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup_LaserControl = new javax.swing.ButtonGroup();
        jPanel_Initialize = new javax.swing.JPanel();
        jLabel_StartPos = new javax.swing.JLabel();
        jLabel_StartX = new javax.swing.JLabel();
        jTextField_StartX = new javax.swing.JTextField();
        jLabel_StartY = new javax.swing.JLabel();
        jTextField_StartY = new javax.swing.JTextField();
        jButton_SetStartAsCurrentPos = new javax.swing.JButton();
        jLabel_CurrentPos = new javax.swing.JLabel();
        jLabel_CurrentPosXName = new javax.swing.JLabel();
        jLabel_CurrentPosYName = new javax.swing.JLabel();
        jLabel_CurrentX = new javax.swing.JLabel();
        jButton_SetPosAsOrigin = new javax.swing.JButton();
        jLabel_CurrentY = new javax.swing.JLabel();
        jPanel_ManualControl = new javax.swing.JPanel();
        jButton_GotoPrevFov = new javax.swing.JButton();
        jButton_GotoNextFov = new javax.swing.JButton();
        jLabel_CurrentFovLabel = new javax.swing.JLabel();
        jLabel_CurrentFovNumber = new javax.swing.JLabel();
        jButton_Acqiure1Fov = new javax.swing.JButton();
        jPanel_LaserControl = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jRadioButton_LaserControlManual = new javax.swing.JRadioButton();
        jLabel_ActivationPowerLabel = new javax.swing.JLabel();
        jLabel_ExcitationPowerLabel = new javax.swing.JLabel();
        jTextField_ActivationPowerNumber = new javax.swing.JTextField();
        jTextField_ExcitationPowerNumber = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jRadioButton_LaserControlAuto = new javax.swing.JRadioButton();
        jButton_OpenAutoLase = new javax.swing.JButton();
        jPanel_BactDetection = new javax.swing.JPanel();
        jCheckBox_ExcludeBadFov = new javax.swing.JCheckBox();
        jButton_OpenBactConfig = new javax.swing.JButton();
        jButton_Initialize = new javax.swing.JButton();
        jButton_AcquireAllFov = new javax.swing.JButton();
        jButton_Abort = new javax.swing.JButton();
        jButton_OpenInitOptions = new javax.swing.JButton();
        jButton_LoadSettings = new javax.swing.JButton();
        jButton_SaveSettings = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("HTPALM Control");

        jPanel_Initialize.setBorder(javax.swing.BorderFactory.createTitledBorder("Mosaic setup"));

        jLabel_StartPos.setText("Start position:");

        jLabel_StartX.setText("X");

        jTextField_StartX.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField_StartX.setText("00.00");
        jTextField_StartX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_StartXActionPerformed(evt);
            }
        });

        jLabel_StartY.setText("Y");

        jTextField_StartY.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField_StartY.setText("00.00");
        jTextField_StartY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_StartYActionPerformed(evt);
            }
        });

        jButton_SetStartAsCurrentPos.setText("Use current position");
        jButton_SetStartAsCurrentPos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SetStartAsCurrentPosActionPerformed(evt);
            }
        });

        jLabel_CurrentPos.setText("Current position:");

        jLabel_CurrentPosXName.setText("X");

        jLabel_CurrentPosYName.setText("Y");

        jLabel_CurrentX.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel_CurrentX.setText("00.00");

        jButton_SetPosAsOrigin.setText("Set as origin");
        jButton_SetPosAsOrigin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SetPosAsOriginActionPerformed(evt);
            }
        });

        jLabel_CurrentY.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel_CurrentY.setText("00.00");

        org.jdesktop.layout.GroupLayout jPanel_InitializeLayout = new org.jdesktop.layout.GroupLayout(jPanel_Initialize);
        jPanel_Initialize.setLayout(jPanel_InitializeLayout);
        jPanel_InitializeLayout.setHorizontalGroup(
            jPanel_InitializeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_InitializeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel_InitializeLayout.createSequentialGroup()
                    .add(99, 99, 99)
                    .add(jButton_SetStartAsCurrentPos, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(jPanel_InitializeLayout.createSequentialGroup()
                    .add(102, 102, 102)
                    .add(jButton_SetPosAsOrigin, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .add(jPanel_InitializeLayout.createSequentialGroup()
                .add(11, 11, 11)
                .add(jLabel_CurrentPos)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel_CurrentPosXName)
                .add(10, 10, 10)
                .add(jLabel_CurrentX, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel_CurrentPosYName)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel_CurrentY, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(jPanel_InitializeLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel_InitializeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel_StartPos)
                    .add(jPanel_InitializeLayout.createSequentialGroup()
                        .add(91, 91, 91)
                        .add(jLabel_StartX)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jTextField_StartX, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jLabel_StartY)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jTextField_StartY, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel_InitializeLayout.setVerticalGroup(
            jPanel_InitializeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel_InitializeLayout.createSequentialGroup()
                .add(jPanel_InitializeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel_CurrentPos)
                    .add(jLabel_CurrentPosXName)
                    .add(jLabel_CurrentPosYName)
                    .add(jLabel_CurrentX)
                    .add(jLabel_CurrentY))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton_SetPosAsOrigin)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel_InitializeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel_StartPos)
                    .add(jLabel_StartX)
                    .add(jTextField_StartX, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel_StartY)
                    .add(jTextField_StartY, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(4, 4, 4)
                .add(jButton_SetStartAsCurrentPos))
        );

        jPanel_ManualControl.setBorder(javax.swing.BorderFactory.createTitledBorder("Manual control"));

        jButton_GotoPrevFov.setText("<");
        jButton_GotoPrevFov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_GotoPrevFovActionPerformed(evt);
            }
        });

        jButton_GotoNextFov.setText(">");
        jButton_GotoNextFov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_GotoNextFovActionPerformed(evt);
            }
        });

        jLabel_CurrentFovLabel.setText("Current FOV:");

        jLabel_CurrentFovNumber.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel_CurrentFovNumber.setText("0");

        jButton_Acqiure1Fov.setText("Acquire 1 FOV");
        jButton_Acqiure1Fov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Acqiure1FovActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel_ManualControlLayout = new org.jdesktop.layout.GroupLayout(jPanel_ManualControl);
        jPanel_ManualControl.setLayout(jPanel_ManualControlLayout);
        jPanel_ManualControlLayout.setHorizontalGroup(
            jPanel_ManualControlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_ManualControlLayout.createSequentialGroup()
                .add(jPanel_ManualControlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel_ManualControlLayout.createSequentialGroup()
                        .add(29, 29, 29)
                        .add(jButton_GotoPrevFov)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel_CurrentFovLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel_CurrentFovNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButton_GotoNextFov)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel_ManualControlLayout.createSequentialGroup()
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButton_Acqiure1Fov)))
                .addContainerGap())
        );
        jPanel_ManualControlLayout.setVerticalGroup(
            jPanel_ManualControlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_ManualControlLayout.createSequentialGroup()
                .add(jPanel_ManualControlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton_GotoPrevFov)
                    .add(jButton_GotoNextFov)
                    .add(jLabel_CurrentFovLabel)
                    .add(jLabel_CurrentFovNumber))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton_Acqiure1Fov))
        );

        jPanel_LaserControl.setBorder(javax.swing.BorderFactory.createTitledBorder("Laser control"));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonGroup_LaserControl.add(jRadioButton_LaserControlManual);
        jRadioButton_LaserControlManual.setText("Manual");
        jRadioButton_LaserControlManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_LaserControlManualActionPerformed(evt);
            }
        });

        jLabel_ActivationPowerLabel.setText("Photoactivation power:");

        jLabel_ExcitationPowerLabel.setText("Excitation power:");

        jTextField_ActivationPowerNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_ActivationPowerNumberActionPerformed(evt);
            }
        });

        jTextField_ExcitationPowerNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_ExcitationPowerNumberActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jRadioButton_LaserControlManual)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel_ActivationPowerLabel)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                        .add(28, 28, 28)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                                .add(jLabel_ExcitationPowerLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jTextField_ExcitationPowerNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(1, 1, 1))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField_ActivationPowerNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jRadioButton_LaserControlManual)
                .add(0, 0, Short.MAX_VALUE))
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel_ActivationPowerLabel)
                    .add(jTextField_ActivationPowerNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel_ExcitationPowerLabel)
                    .add(jTextField_ExcitationPowerNumber, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonGroup_LaserControl.add(jRadioButton_LaserControlAuto);
        jRadioButton_LaserControlAuto.setText("Automatic (TODO!)");
        jRadioButton_LaserControlAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton_LaserControlAutoActionPerformed(evt);
            }
        });

        jButton_OpenAutoLase.setText("Open Autolase");
        jButton_OpenAutoLase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_OpenAutoLaseActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jRadioButton_LaserControlAuto)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton_OpenAutoLase))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jRadioButton_LaserControlAuto)
                .add(jButton_OpenAutoLase))
        );

        org.jdesktop.layout.GroupLayout jPanel_LaserControlLayout = new org.jdesktop.layout.GroupLayout(jPanel_LaserControl);
        jPanel_LaserControl.setLayout(jPanel_LaserControlLayout);
        jPanel_LaserControlLayout.setHorizontalGroup(
            jPanel_LaserControlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_LaserControlLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel_LaserControlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel_LaserControlLayout.setVerticalGroup(
            jPanel_LaserControlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_LaserControlLayout.createSequentialGroup()
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel_BactDetection.setBorder(javax.swing.BorderFactory.createTitledBorder("Bacteria detection"));

        jCheckBox_ExcludeBadFov.setText("Automatically exclude bad FOVs (TODO!)");
        jCheckBox_ExcludeBadFov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_ExcludeBadFovActionPerformed(evt);
            }
        });

        jButton_OpenBactConfig.setText("Configure");
        jButton_OpenBactConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_OpenBactConfigActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel_BactDetectionLayout = new org.jdesktop.layout.GroupLayout(jPanel_BactDetection);
        jPanel_BactDetection.setLayout(jPanel_BactDetectionLayout);
        jPanel_BactDetectionLayout.setHorizontalGroup(
            jPanel_BactDetectionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_BactDetectionLayout.createSequentialGroup()
                .addContainerGap()
                .add(jCheckBox_ExcludeBadFov)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 13, Short.MAX_VALUE)
                .add(jButton_OpenBactConfig)
                .addContainerGap())
        );
        jPanel_BactDetectionLayout.setVerticalGroup(
            jPanel_BactDetectionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel_BactDetectionLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(jCheckBox_ExcludeBadFov)
                .add(jButton_OpenBactConfig))
        );

        jButton_Initialize.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton_Initialize.setText("Initialize!");
        jButton_Initialize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_InitializeActionPerformed(evt);
            }
        });

        jButton_AcquireAllFov.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton_AcquireAllFov.setText("Acquire all!");
        jButton_AcquireAllFov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AcquireAllFovActionPerformed(evt);
            }
        });

        jButton_Abort.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton_Abort.setText("Abort all");
        jButton_Abort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AbortActionPerformed(evt);
            }
        });

        jButton_OpenInitOptions.setText("Options");
        jButton_OpenInitOptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_OpenInitOptionsActionPerformed(evt);
            }
        });

        jButton_LoadSettings.setText("Load...");
        jButton_LoadSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_LoadSettingsActionPerformed(evt);
            }
        });

        jButton_SaveSettings.setText("Save as...");
        jButton_SaveSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SaveSettingsActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(jPanel_Initialize, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jPanel_ManualControl, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(jButton_SaveSettings, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jButton_LoadSettings, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jButton_AcquireAllFov, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jButton_Abort, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jButton_OpenInitOptions, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jButton_Initialize, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel_LaserControl, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(jPanel_BactDetection, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(0, 11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(layout.createSequentialGroup()
                        .add(jButton_Initialize)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton_AcquireAllFov)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton_Abort)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButton_OpenInitOptions))
                    .add(jPanel_Initialize, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(jButton_LoadSettings)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton_SaveSettings)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                    .add(jPanel_ManualControl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(jPanel_LaserControl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel_BactDetection, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   private void jTextField_StartXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_StartXActionPerformed
      config_.mosaicStartPosX_ = Double.parseDouble(jTextField_StartX.getText());
   }//GEN-LAST:event_jTextField_StartXActionPerformed

   private void jTextField_StartYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_StartYActionPerformed
      config_.mosaicStartPosY_ = Double.parseDouble(jTextField_StartY.getText());
   }//GEN-LAST:event_jTextField_StartYActionPerformed

   private void jButton_SetPosAsOriginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SetPosAsOriginActionPerformed
      control_.setCurrentPosAsOrigin();
   }//GEN-LAST:event_jButton_SetPosAsOriginActionPerformed

   private void jButton_InitializeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_InitializeActionPerformed
      updateSettings();
      control_.initializeAcquisition(config_);
   }//GEN-LAST:event_jButton_InitializeActionPerformed

   private void jRadioButton_LaserControlManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_LaserControlManualActionPerformed
      config_.laserControlIsAutomatic_ = getStateLaserControlRadioGroup();
   }//GEN-LAST:event_jRadioButton_LaserControlManualActionPerformed

   private void jButton_OpenAutoLaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_OpenAutoLaseActionPerformed
      // TODO add your handling code here:
   }//GEN-LAST:event_jButton_OpenAutoLaseActionPerformed

   private void jCheckBox_ExcludeBadFovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_ExcludeBadFovActionPerformed
      config_.fovAnalysis_excludeBadFov_ = jCheckBox_ExcludeBadFov.isSelected();
   }//GEN-LAST:event_jCheckBox_ExcludeBadFovActionPerformed

   private void jButton_Acqiure1FovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Acqiure1FovActionPerformed
      updateSettings();
      control_.acquire1Fov();
   }//GEN-LAST:event_jButton_Acqiure1FovActionPerformed

   private void jButton_OpenInitOptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_OpenInitOptionsActionPerformed
      boolean modal = true;
      initOptionDlg_= new InitOptionDialog(gui_,config_, modal );
      initOptionDlg_.setVisible(true);
   }//GEN-LAST:event_jButton_OpenInitOptionsActionPerformed

   private void jButton_SetStartAsCurrentPosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SetStartAsCurrentPosActionPerformed
      updateSettings();
      jTextField_StartX.setText(Double.toString(config_.mosaicStartPosX_));
      jTextField_StartY.setText(Double.toString(config_.mosaicStartPosY_));
   }//GEN-LAST:event_jButton_SetStartAsCurrentPosActionPerformed

   private void jButton_GotoNextFovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_GotoNextFovActionPerformed
      updateSettings();
      control_.gotoNextFov();
   }//GEN-LAST:event_jButton_GotoNextFovActionPerformed

   private void jButton_GotoPrevFovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_GotoPrevFovActionPerformed
      updateSettings();
      control_.gotoPrevFov();
   }//GEN-LAST:event_jButton_GotoPrevFovActionPerformed

   private void jButton_OpenBactConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_OpenBactConfigActionPerformed
      // TODO add your handling code here:
   }//GEN-LAST:event_jButton_OpenBactConfigActionPerformed

   private void jButton_AcquireAllFovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AcquireAllFovActionPerformed
      updateSettings();
      control_.acquire1Fov();
   }//GEN-LAST:event_jButton_AcquireAllFovActionPerformed

   private void jButton_AbortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AbortActionPerformed
      updateSettings();
      control_.acquireAll();
   }//GEN-LAST:event_jButton_AbortActionPerformed

   private void jButton_LoadSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_LoadSettingsActionPerformed
      //open
      JFileChooser fileCh = new JFileChooser();
      fileCh.addChoosableFileFilter(new XmlFilter());
      int returnVal = fileCh.showOpenDialog(this);
      
      if (returnVal == JFileChooser.APPROVE_OPTION) {
         try {
            File file = fileCh.getSelectedFile();
            file = XmlFilter.makeXml(file);
            System.out.println("Load: " + file.getCanonicalPath());
            config_.loadConfig(file.getCanonicalPath());
            reloadSettings();//update config_
         } catch (IOException ex) {
            Logger.getLogger(HTPALMDialog.class.getName()).log(Level.SEVERE, null, ex);
         }
      } else {
         //DO NOTHING - file load cancelled by user
      }
   }//GEN-LAST:event_jButton_LoadSettingsActionPerformed

   private void jButton_SaveSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SaveSettingsActionPerformed
      //save
      JFileChooser fileCh = new JFileChooser();
      fileCh.addChoosableFileFilter(new XmlFilter());
      int returnVal = fileCh.showSaveDialog(this);
      
      if (returnVal == JFileChooser.APPROVE_OPTION) {
         try {
            File file = fileCh.getSelectedFile();
            file = XmlFilter.makeXml(file);
            reloadSettings();//update config_
            System.out.println("Save as" + file.getCanonicalPath());//DEBUG
            config_.saveConfig(file.getCanonicalPath());
         } catch (IOException ex) {
            Logger.getLogger(HTPALMDialog.class.getName()).log(Level.SEVERE, null, ex);
         }
      } else {
         //DO NOTHING - file load cancelled by user
      }
   }//GEN-LAST:event_jButton_SaveSettingsActionPerformed

   private void jRadioButton_LaserControlAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton_LaserControlAutoActionPerformed
      config_.laserControlIsAutomatic_ = getStateLaserControlRadioGroup();
   }//GEN-LAST:event_jRadioButton_LaserControlAutoActionPerformed

   private void jTextField_ActivationPowerNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_ActivationPowerNumberActionPerformed
      config_.laserManualActPower_=Double.parseDouble(jTextField_ActivationPowerNumber.getText());
   }//GEN-LAST:event_jTextField_ActivationPowerNumberActionPerformed

   private void jTextField_ExcitationPowerNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_ExcitationPowerNumberActionPerformed
      config_.laserManualExPower_=Double.parseDouble(jTextField_ExcitationPowerNumber.getText());
   }//GEN-LAST:event_jTextField_ExcitationPowerNumberActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup_LaserControl;
    private javax.swing.JButton jButton_Abort;
    private javax.swing.JButton jButton_Acqiure1Fov;
    private javax.swing.JButton jButton_AcquireAllFov;
    private javax.swing.JButton jButton_GotoNextFov;
    private javax.swing.JButton jButton_GotoPrevFov;
    private javax.swing.JButton jButton_Initialize;
    private javax.swing.JButton jButton_LoadSettings;
    private javax.swing.JButton jButton_OpenAutoLase;
    private javax.swing.JButton jButton_OpenBactConfig;
    private javax.swing.JButton jButton_OpenInitOptions;
    private javax.swing.JButton jButton_SaveSettings;
    private javax.swing.JButton jButton_SetPosAsOrigin;
    private javax.swing.JButton jButton_SetStartAsCurrentPos;
    private javax.swing.JCheckBox jCheckBox_ExcludeBadFov;
    private javax.swing.JLabel jLabel_ActivationPowerLabel;
    private javax.swing.JLabel jLabel_CurrentFovLabel;
    private javax.swing.JLabel jLabel_CurrentFovNumber;
    private javax.swing.JLabel jLabel_CurrentPos;
    private javax.swing.JLabel jLabel_CurrentPosXName;
    private javax.swing.JLabel jLabel_CurrentPosYName;
    private javax.swing.JLabel jLabel_CurrentX;
    private javax.swing.JLabel jLabel_CurrentY;
    private javax.swing.JLabel jLabel_ExcitationPowerLabel;
    private javax.swing.JLabel jLabel_StartPos;
    private javax.swing.JLabel jLabel_StartX;
    private javax.swing.JLabel jLabel_StartY;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel_BactDetection;
    private javax.swing.JPanel jPanel_Initialize;
    private javax.swing.JPanel jPanel_LaserControl;
    private javax.swing.JPanel jPanel_ManualControl;
    private javax.swing.JRadioButton jRadioButton_LaserControlAuto;
    private javax.swing.JRadioButton jRadioButton_LaserControlManual;
    private javax.swing.JTextField jTextField_ActivationPowerNumber;
    private javax.swing.JTextField jTextField_ExcitationPowerNumber;
    private javax.swing.JTextField jTextField_StartX;
    private javax.swing.JTextField jTextField_StartY;
    // End of variables declaration//GEN-END:variables

   public void propertiesChangedAlert() {
      //TODO
   }

   public void propertyChangedAlert(String device, String property, String value) {
      //TODO
   }

   public void configGroupChangedAlert(String groupName, String newConfig) {
      //TODO
   }

   public void pixelSizeChangedAlert(double newPixelSizeUm) {
      //TODO
   }

   public void stagePositionChangedAlert(String deviceName, double pos) {
      //TODO
   }

   public void xyStagePositionChanged(String deviceName, double xPos, double yPos) {
      jLabel_CurrentX.setText(Double.toString(xPos));
      jLabel_CurrentY.setText(Double.toString(yPos));
   }
}
