/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package htpalm;

import java.io.File;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import org.apache.commons.beanutils.BeanUtils;
import org.micromanager.utils.ReportingUtils;

/**
 *
 * @author seamus.holden@epfl.ch
 */
public class InitOptionDialog extends javax.swing.JDialog {

   ConfigurationOptions newConfig_;
   ConfigurationOptions config_;

   /**
    * Creates new form InitOptionDialog
    */
   public InitOptionDialog(java.awt.Frame parent, ConfigurationOptions config_,boolean modal) {
      super(parent, modal);
      initComponents();
      this.config_ = config_;
      newConfig_ = new ConfigurationOptions();
      
      try {
         BeanUtils.copyProperties(newConfig_,this.config_);//copy the properties of config into newConfig_
         reloadSettings();
      } catch (IllegalAccessException ex) {
         ReportingUtils.logError(ex, "Failed to make copy of settings");
      } catch (InvocationTargetException ex) {
         ReportingUtils.logError(ex, "Failed to make copy of settings");
      }
   }
   
   private void reloadSettings(){
      jTextField_StepSizeX.setText(Double.toString(newConfig_.mosaicStepSizeX_));
      jTextField_StepSizeY.setText(Double.toString(newConfig_.mosaicStepSizeY_));
      jTextField_MosaicNFov.setText(Integer.toString(newConfig_.mosaicNFov));
      jTextField_AcqFolderName.setText(newConfig_.fileAcqFolder_);
      jTextField_BaseFileName.setText(newConfig_.fileBaseName_);
      jTextField_EmccdCamName.setText(newConfig_.camEmccdName_);
      jTextField_EmccdExposureTime.setText(Double.toString(newConfig_.camEmccdExposureMs_));
      jTextField_PhCamName.setText(newConfig_.camPhName_);
      jTextField_PhExposureTime.setText(Double.toString(newConfig_.camPhExposureMs_));
      jTextField_PhCamDelayTime.setText(Double.toString(newConfig_.camPhDelayMs_));
      jCheckBox_ConvertPhExposureMsToSec.setSelected(newConfig_.camConvertPhExposureToSec_);
      jTextField_ExcitationDacName.setText(newConfig_.laserExDacName_);
      jTextField_ExcitationTtlName.setText(newConfig_.laserExTtlName_);
      jTextField_ActivationDacName.setText(newConfig_.laserActDacName_);
      jTextField_ActivationTtlName.setText(newConfig_.laserActTtlName_);
      jTextField_LaserShutterTtlName.setText(newConfig_.laserShutterTtlName_);
      jTextField_PhLampTtlName.setText(newConfig_.phLampTtlName_);
      
   }

   private void updateSettings(){
      newConfig_.mosaicStepSizeX_= Double.parseDouble(jTextField_StepSizeX.getText());
      newConfig_.mosaicStepSizeY_= Double.parseDouble(jTextField_StepSizeY.getText());
      newConfig_.mosaicNFov = Integer.parseInt(jTextField_MosaicNFov.getText());
      newConfig_.fileAcqFolder_ = jTextField_AcqFolderName.getText();
      newConfig_.fileBaseName_ = jTextField_BaseFileName.getText();
      newConfig_.camEmccdName_ = jTextField_EmccdCamName.getText();
      newConfig_.camEmccdExposureMs_ = Double.parseDouble(jTextField_EmccdExposureTime.getText());
      newConfig_.camPhName_ = jTextField_PhCamName.getText(); 
      newConfig_.camPhExposureMs_= Double.parseDouble(jTextField_PhExposureTime.getText());
      newConfig_.camPhDelayMs_= Double.parseDouble(jTextField_PhCamDelayTime.getText());
      newConfig_.camConvertPhExposureToSec_ = jCheckBox_ConvertPhExposureMsToSec.isSelected();
      newConfig_.laserExDacName_ = jTextField_ExcitationDacName.getText();
      newConfig_.laserExTtlName_ = jTextField_ExcitationTtlName.getText();
      newConfig_.laserActDacName_ = jTextField_ActivationDacName.getText();
      newConfig_.laserActTtlName_ = jTextField_ActivationTtlName.getText();
      newConfig_.laserShutterTtlName_ = jTextField_LaserShutterTtlName.getText();
      newConfig_.phLampTtlName_ = jTextField_PhLampTtlName.getText();
   }

   /*
    *  Copy the properties of newConfig_ into config_
    */
   private void updateConfig(){
      try {
         BeanUtils.copyProperties(config_,newConfig_);//copy the properties of newConfig_ into config_
      } catch (IllegalAccessException ex) {
         ReportingUtils.logError(ex, "Failed to make copy of settings");
      } catch (InvocationTargetException ex) {
         ReportingUtils.logError(ex, "Failed to make copy of settings");
      }
   }
   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane_Settings = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel_StepSizeX = new javax.swing.JLabel();
        jTextField_StepSizeX = new javax.swing.JTextField();
        jLabel_StepSizeY = new javax.swing.JLabel();
        jTextField_StepSizeY = new javax.swing.JTextField();
        jLabel_MosaicNFov = new javax.swing.JLabel();
        jTextField_MosaicNFov = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel_AcqFolderName = new javax.swing.JLabel();
        jLabel_BaseFileName = new javax.swing.JLabel();
        jTextField_BaseFileName = new javax.swing.JTextField();
        jTextField_AcqFolderName = new javax.swing.JTextField();
        jButton_BrowseAcqFolder = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel_EmccdCamName = new javax.swing.JLabel();
        jLabel_EmccdExposureTime = new javax.swing.JLabel();
        jLabel_PhCamName = new javax.swing.JLabel();
        jLabel_PhExposureTime = new javax.swing.JLabel();
        jLabel_PhCamDelayTime = new javax.swing.JLabel();
        jCheckBox_ConvertPhExposureMsToSec = new javax.swing.JCheckBox();
        jTextField_EmccdCamName = new javax.swing.JTextField();
        jTextField_EmccdExposureTime = new javax.swing.JTextField();
        jTextField_PhCamName = new javax.swing.JTextField();
        jTextField_PhExposureTime = new javax.swing.JTextField();
        jTextField_PhCamDelayTime = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel_ExcitationDacName = new javax.swing.JLabel();
        jLabel_ExcitationTtlName = new javax.swing.JLabel();
        jLabel_ActivationDacName = new javax.swing.JLabel();
        jLabel_ActivationTtlName = new javax.swing.JLabel();
        jLabel_LaserShutterTtlName = new javax.swing.JLabel();
        jLabel_PhLampTtlName = new javax.swing.JLabel();
        jTextField_ExcitationDacName = new javax.swing.JTextField();
        jTextField_ExcitationTtlName = new javax.swing.JTextField();
        jTextField_ActivationDacName = new javax.swing.JTextField();
        jTextField_ActivationTtlName = new javax.swing.JTextField();
        jTextField_LaserShutterTtlName = new javax.swing.JTextField();
        jTextField_PhLampTtlName = new javax.swing.JTextField();
        jButton_Apply = new javax.swing.JButton();
        jButton_Cancel = new javax.swing.JButton();
        jButton_Ok = new javax.swing.JButton();
        jButton_SaveSettingsAsDefault = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("HTPALM options");

        jLabel_StepSizeX.setText("Step size X (um):");

        jTextField_StepSizeX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_StepSizeXActionPerformed(evt);
            }
        });

        jLabel_StepSizeY.setText("Step size Y (um):");

        jTextField_StepSizeY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_StepSizeYActionPerformed(evt);
            }
        });

        jLabel_MosaicNFov.setText("Number of FOV:");
        jLabel_MosaicNFov.setToolTipText("Number of fields of view to be acquired");

        jTextField_MosaicNFov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_MosaicNFovActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel_StepSizeX)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jTextField_StepSizeX, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel_StepSizeY)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jTextField_StepSizeY, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel_MosaicNFov)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jTextField_MosaicNFov, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(208, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel_StepSizeX)
                    .add(jTextField_StepSizeX, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel_StepSizeY)
                    .add(jTextField_StepSizeY, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel_MosaicNFov)
                    .add(jTextField_MosaicNFov, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(143, Short.MAX_VALUE))
        );

        jTabbedPane_Settings.addTab("Mosaic settings", jPanel1);

        jLabel_AcqFolderName.setText("Acquisition folder:");

        jLabel_BaseFileName.setText("Base file name:");

        jTextField_BaseFileName.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField_BaseFileName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_BaseFileNameActionPerformed(evt);
            }
        });

        jTextField_AcqFolderName.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField_AcqFolderName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_AcqFolderNameActionPerformed(evt);
            }
        });

        jButton_BrowseAcqFolder.setText("...");
        jButton_BrowseAcqFolder.setToolTipText("Browse");
        jButton_BrowseAcqFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_BrowseAcqFolderActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jLabel_AcqFolderName)
                        .add(1, 4, Short.MAX_VALUE))
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jLabel_BaseFileName)
                        .add(0, 0, Short.MAX_VALUE)))
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField_BaseFileName)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField_AcqFolderName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton_BrowseAcqFolder, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel_AcqFolderName)
                    .add(jTextField_AcqFolderName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton_BrowseAcqFolder))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel_BaseFileName)
                    .add(jTextField_BaseFileName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(166, Short.MAX_VALUE))
        );

        jTabbedPane_Settings.addTab("File locations", jPanel3);

        jLabel_EmccdCamName.setText("EMCCD camera name:");

        jLabel_EmccdExposureTime.setText("EMCCD exposure (ms):");

        jLabel_PhCamName.setText("PH camera name:");

        jLabel_PhExposureTime.setText("PH exposure time (ms):");

        jLabel_PhCamDelayTime.setText("PH delay time (ms):");
        jLabel_PhCamDelayTime.setToolTipText("Time to wait after PH acquisition");

        jCheckBox_ConvertPhExposureMsToSec.setText("Convert PH exposure time to seconds");
        jCheckBox_ConvertPhExposureMsToSec.setToolTipText("Workaround to correct for TISCam bug");
        jCheckBox_ConvertPhExposureMsToSec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_ConvertPhExposureMsToSecActionPerformed(evt);
            }
        });

        jTextField_EmccdCamName.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField_EmccdCamName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_EmccdCamNameActionPerformed(evt);
            }
        });

        jTextField_EmccdExposureTime.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField_EmccdExposureTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_EmccdExposureTimeActionPerformed(evt);
            }
        });

        jTextField_PhCamName.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField_PhCamName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_PhCamNameActionPerformed(evt);
            }
        });

        jTextField_PhExposureTime.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField_PhExposureTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_PhExposureTimeActionPerformed(evt);
            }
        });

        jTextField_PhCamDelayTime.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField_PhCamDelayTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_PhCamDelayTimeActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel_EmccdCamName)
                    .add(jLabel_EmccdExposureTime)
                    .add(jLabel_PhCamName)
                    .add(jLabel_PhExposureTime)
                    .add(jLabel_PhCamDelayTime))
                .add(65, 65, 65)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField_EmccdCamName)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField_EmccdExposureTime)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField_PhCamName)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField_PhExposureTime)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField_PhCamDelayTime))
                .addContainerGap())
            .add(jPanel4Layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(jCheckBox_ConvertPhExposureMsToSec)
                .add(127, 127, 127))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel_EmccdCamName)
                    .add(jTextField_EmccdCamName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel_EmccdExposureTime)
                    .add(jTextField_EmccdExposureTime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel_PhCamName)
                    .add(jTextField_PhCamName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel_PhExposureTime)
                    .add(jTextField_PhExposureTime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel_PhCamDelayTime)
                    .add(jTextField_PhCamDelayTime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jCheckBox_ConvertPhExposureMsToSec)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        jTabbedPane_Settings.addTab("Camera settings", jPanel4);

        jLabel_ExcitationDacName.setText("Excitation laser DAC Name:");

        jLabel_ExcitationTtlName.setText("Excitation laser TTL Name:");

        jLabel_ActivationDacName.setText("Photoactivation laser DAC Name:");

        jLabel_ActivationTtlName.setText("Photoactivation laser TTL Name:");

        jLabel_LaserShutterTtlName.setText("Laser shutter TTL name:");

        jLabel_PhLampTtlName.setText("PH lamp TTL name:");

        jTextField_ExcitationDacName.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField_ExcitationDacName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_ExcitationDacNameActionPerformed(evt);
            }
        });

        jTextField_ExcitationTtlName.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField_ExcitationTtlName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_ExcitationTtlNameActionPerformed(evt);
            }
        });

        jTextField_ActivationDacName.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField_ActivationDacName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_ActivationDacNameActionPerformed(evt);
            }
        });

        jTextField_ActivationTtlName.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField_ActivationTtlName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_ActivationTtlNameActionPerformed(evt);
            }
        });

        jTextField_LaserShutterTtlName.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField_LaserShutterTtlName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_LaserShutterTtlNameActionPerformed(evt);
            }
        });

        jTextField_PhLampTtlName.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField_PhLampTtlName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_PhLampTtlNameActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel_ExcitationDacName)
                    .add(jLabel_ExcitationTtlName)
                    .add(jLabel_ActivationDacName)
                    .add(jLabel_ActivationTtlName)
                    .add(jLabel_LaserShutterTtlName)
                    .add(jLabel_PhLampTtlName))
                .add(18, 18, 18)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField_ExcitationDacName)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField_ExcitationTtlName)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField_ActivationDacName)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField_ActivationTtlName)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField_LaserShutterTtlName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField_PhLampTtlName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel_ExcitationDacName)
                    .add(jTextField_ExcitationDacName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel_ExcitationTtlName)
                    .add(jTextField_ExcitationTtlName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel_ActivationDacName)
                    .add(jTextField_ActivationDacName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel_ActivationTtlName)
                    .add(jTextField_ActivationTtlName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel_LaserShutterTtlName)
                    .add(jTextField_LaserShutterTtlName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel_PhLampTtlName)
                    .add(jTextField_PhLampTtlName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        jTabbedPane_Settings.addTab("Lasers & shutters", jPanel2);

        jButton_Apply.setText("Apply");
        jButton_Apply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ApplyActionPerformed(evt);
            }
        });

        jButton_Cancel.setText("Cancel");
        jButton_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelActionPerformed(evt);
            }
        });

        jButton_Ok.setText("OK");
        jButton_Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_OkActionPerformed(evt);
            }
        });

        jButton_SaveSettingsAsDefault.setText("Set as default");
        jButton_SaveSettingsAsDefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SaveSettingsAsDefaultActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(layout.createSequentialGroup()
                        .add(jButton_SaveSettingsAsDefault)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButton_Ok)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton_Apply)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton_Cancel))
                    .add(jTabbedPane_Settings, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 359, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jTabbedPane_Settings)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButton_Apply)
                    .add(jButton_Cancel)
                    .add(jButton_Ok)
                    .add(jButton_SaveSettingsAsDefault))
                .add(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   private void jButton_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelActionPerformed
      dispose();
   }//GEN-LAST:event_jButton_CancelActionPerformed

   private void jButton_ApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ApplyActionPerformed
      updateSettings();
      updateConfig();
   }//GEN-LAST:event_jButton_ApplyActionPerformed

   private void jTextField_ExcitationDacNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_ExcitationDacNameActionPerformed
      newConfig_.laserExDacName_ = jTextField_ExcitationDacName.getText();
   }//GEN-LAST:event_jTextField_ExcitationDacNameActionPerformed

   private void jTextField_EmccdCamNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_EmccdCamNameActionPerformed
      newConfig_.camEmccdName_ = jTextField_EmccdCamName.getText();
   }//GEN-LAST:event_jTextField_EmccdCamNameActionPerformed

   private void jTextField_EmccdExposureTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_EmccdExposureTimeActionPerformed
     newConfig_.camEmccdExposureMs_ = Double.parseDouble(jTextField_EmccdExposureTime.getText());
   }//GEN-LAST:event_jTextField_EmccdExposureTimeActionPerformed

   private void jTextField_PhCamDelayTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_PhCamDelayTimeActionPerformed
     newConfig_.camPhDelayMs_= Double.parseDouble(jTextField_PhCamDelayTime.getText());
   }//GEN-LAST:event_jTextField_PhCamDelayTimeActionPerformed

   private void jTextField_PhCamNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_PhCamNameActionPerformed
     newConfig_.camPhName_ = jTextField_PhCamName.getText(); 
   }//GEN-LAST:event_jTextField_PhCamNameActionPerformed

   private void jTextField_PhExposureTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_PhExposureTimeActionPerformed
     newConfig_.camPhExposureMs_= Double.parseDouble(jTextField_PhExposureTime.getText());
   }//GEN-LAST:event_jTextField_PhExposureTimeActionPerformed

   private void jTextField_BaseFileNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_BaseFileNameActionPerformed
      newConfig_.fileBaseName_ = jTextField_BaseFileName.getText();
   }//GEN-LAST:event_jTextField_BaseFileNameActionPerformed

   private void jTextField_AcqFolderNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_AcqFolderNameActionPerformed
      newConfig_.fileAcqFolder_ = jTextField_AcqFolderName.getText();
   }//GEN-LAST:event_jTextField_AcqFolderNameActionPerformed

   private void jButton_BrowseAcqFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_BrowseAcqFolderActionPerformed
      //select a root directory
      JFileChooser chooser = new JFileChooser();
      chooser.setDialogTitle("Select target directory");
      chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
      int returnVal = chooser.showOpenDialog(this);
      if(returnVal == JFileChooser.APPROVE_OPTION) {
         try {
            File f = chooser.getSelectedFile();
            String folderName = f.getCanonicalPath();
            newConfig_.fileAcqFolder_ = folderName;
            jTextField_AcqFolderName.setText(newConfig_.fileAcqFolder_);
            
         } catch (IOException ex) {
            ReportingUtils.logError(ex, "Unable to get path");
         }
      }
   }//GEN-LAST:event_jButton_BrowseAcqFolderActionPerformed

   private void jTextField_StepSizeXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_StepSizeXActionPerformed
     newConfig_.mosaicStepSizeX_= Double.parseDouble(jTextField_StepSizeX.getText());
   }//GEN-LAST:event_jTextField_StepSizeXActionPerformed

   private void jTextField_StepSizeYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_StepSizeYActionPerformed
     newConfig_.mosaicStepSizeY_= Double.parseDouble(jTextField_StepSizeY.getText());
   }//GEN-LAST:event_jTextField_StepSizeYActionPerformed

   private void jButton_SaveSettingsAsDefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SaveSettingsAsDefaultActionPerformed
      updateSettings();
      newConfig_.saveConfig();
   }//GEN-LAST:event_jButton_SaveSettingsAsDefaultActionPerformed

   private void jButton_OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_OkActionPerformed
      updateSettings();
      updateConfig();
      dispose();
   }//GEN-LAST:event_jButton_OkActionPerformed

   private void jCheckBox_ConvertPhExposureMsToSecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_ConvertPhExposureMsToSecActionPerformed
      newConfig_.camConvertPhExposureToSec_ = jCheckBox_ConvertPhExposureMsToSec.isSelected();
   }//GEN-LAST:event_jCheckBox_ConvertPhExposureMsToSecActionPerformed

   private void jTextField_ExcitationTtlNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_ExcitationTtlNameActionPerformed
      newConfig_.laserExTtlName_ = jTextField_ExcitationTtlName.getText();
   }//GEN-LAST:event_jTextField_ExcitationTtlNameActionPerformed

   private void jTextField_ActivationDacNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_ActivationDacNameActionPerformed
      newConfig_.laserActDacName_ = jTextField_ActivationDacName.getText();
   }//GEN-LAST:event_jTextField_ActivationDacNameActionPerformed

   private void jTextField_ActivationTtlNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_ActivationTtlNameActionPerformed
      newConfig_.laserActTtlName_ = jTextField_ActivationTtlName.getText();
   }//GEN-LAST:event_jTextField_ActivationTtlNameActionPerformed

   private void jTextField_LaserShutterTtlNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_LaserShutterTtlNameActionPerformed
      newConfig_.laserShutterTtlName_ = jTextField_LaserShutterTtlName.getText();
   }//GEN-LAST:event_jTextField_LaserShutterTtlNameActionPerformed

   private void jTextField_PhLampTtlNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_PhLampTtlNameActionPerformed
      newConfig_.phLampTtlName_ = jTextField_PhLampTtlName.getText();
   }//GEN-LAST:event_jTextField_PhLampTtlNameActionPerformed

   private void jTextField_MosaicNFovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_MosaicNFovActionPerformed
      newConfig_.mosaicNFov = Integer.parseInt(jTextField_MosaicNFov.getText());
   }//GEN-LAST:event_jTextField_MosaicNFovActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Apply;
    private javax.swing.JButton jButton_BrowseAcqFolder;
    private javax.swing.JButton jButton_Cancel;
    private javax.swing.JButton jButton_Ok;
    private javax.swing.JButton jButton_SaveSettingsAsDefault;
    private javax.swing.JCheckBox jCheckBox_ConvertPhExposureMsToSec;
    private javax.swing.JLabel jLabel_AcqFolderName;
    private javax.swing.JLabel jLabel_ActivationDacName;
    private javax.swing.JLabel jLabel_ActivationTtlName;
    private javax.swing.JLabel jLabel_BaseFileName;
    private javax.swing.JLabel jLabel_EmccdCamName;
    private javax.swing.JLabel jLabel_EmccdExposureTime;
    private javax.swing.JLabel jLabel_ExcitationDacName;
    private javax.swing.JLabel jLabel_ExcitationTtlName;
    private javax.swing.JLabel jLabel_LaserShutterTtlName;
    private javax.swing.JLabel jLabel_MosaicNFov;
    private javax.swing.JLabel jLabel_PhCamDelayTime;
    private javax.swing.JLabel jLabel_PhCamName;
    private javax.swing.JLabel jLabel_PhExposureTime;
    private javax.swing.JLabel jLabel_PhLampTtlName;
    private javax.swing.JLabel jLabel_StepSizeX;
    private javax.swing.JLabel jLabel_StepSizeY;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane_Settings;
    private javax.swing.JTextField jTextField_AcqFolderName;
    private javax.swing.JTextField jTextField_ActivationDacName;
    private javax.swing.JTextField jTextField_ActivationTtlName;
    private javax.swing.JTextField jTextField_BaseFileName;
    private javax.swing.JTextField jTextField_EmccdCamName;
    private javax.swing.JTextField jTextField_EmccdExposureTime;
    private javax.swing.JTextField jTextField_ExcitationDacName;
    private javax.swing.JTextField jTextField_ExcitationTtlName;
    private javax.swing.JTextField jTextField_LaserShutterTtlName;
    private javax.swing.JTextField jTextField_MosaicNFov;
    private javax.swing.JTextField jTextField_PhCamDelayTime;
    private javax.swing.JTextField jTextField_PhCamName;
    private javax.swing.JTextField jTextField_PhExposureTime;
    private javax.swing.JTextField jTextField_PhLampTtlName;
    private javax.swing.JTextField jTextField_StepSizeX;
    private javax.swing.JTextField jTextField_StepSizeY;
    // End of variables declaration//GEN-END:variables
}
